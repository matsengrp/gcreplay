# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

analysis/beast/output/
nextflow/data/beast/annotated-PR-1-6-1-LB-19-GC.fasta
**/building-xvfb/
**/work
analysis/output/NDS-LB/*/trees/
.vscode/

nextflow/run_scripts*
nextflow/.nextflow*
nextflow/data/_ignore/
nextflow/data/input/*.fastq
nextflow/pipeline_trace.txt

# 1) Ignore everything under nextflow/results
nextflow/results/

# 2) Un-ignore all directories (so we can selectively unignore files later)
!nextflow/results/**/

# 3) Finally, unignore the specific files we actually want to track

# These are results match the final results sent to GV, but after renaming
# 
!nextflow/results/archive/2024-12-19-full/gctrees/*/*/gctree.inference.1.nk
!nextflow/results/archive/2024-12-19-full/gctrees/*/*/gctree.inference.1.svg
!nextflow/results/archive/2024-12-19-full/gctrees/*/*/gctree.p
!nextflow/results/archive/2024-12-19-full/merged-results/*.csv.gz

# These are the results from 3 GC's that only take about an hour to run for comparison
!nextflow/results/archive/test/GCTREE/*/*/gctree.inference.1.nk
!nextflow/results/archive/test/GCTREE/*/*/gctree.inference.1.svg
!nextflow/results/archive/test/GCTREE/*/*/gctree.p
!nextflow/results/archive/test/MERGE_RESULTS/*.csv.gz

# Beast runs
!nextflow/results/archive/2024-12-27-beast-full/ete/

# all log files at top level dir
*.log*


containers/

**/Attic
**/daemon.json

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Passenger analysis
passenger/input
passenger/passenger-blast/*fasta
passenger/passenger-blast/*blast.tsv
passenger/passenger-blast/old
*.db.n*
_ignore/

# temp files in analysis
outdir/tmp
